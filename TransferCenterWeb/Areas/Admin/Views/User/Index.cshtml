@model TransferCenterWeb.Areas.Admin.Models.UserViewModel

@{
    ViewBag.Title = "Users";
    Layout = "_Layout";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2 class="mb-0">Users</h2>
    <div class="btn-group" role="group" aria-label="Actions">
        <a asp-area="Admin" asp-controller="User" asp-action="Create" class="btn btn-primary" title="Create New">
            <i class="bi bi-plus-lg"></i>
        </a>
        <a asp-area="Admin" asp-controller="User" asp-action="ExportExcel" class="btn btn-success" title="Export to Excel">
            <i class="bi bi-file-earmark-spreadsheet"></i>
        </a>
        <a asp-area="Admin" asp-controller="User" asp-action="ExportPdf" class="btn btn-danger" title="Export to PDF">
            <i class="bi bi-file-earmark-pdf"></i>
        </a>
    </div>
</div>

@{
    var currentPage = int.TryParse(ViewContext.HttpContext.Request.Query["page"], out var p) ? p : 1;
    var pageSize = int.TryParse(ViewContext.HttpContext.Request.Query["pageSize"], out var ps) ? ps : 10;
    var total = Model?.TotalCount ?? 0;
    var totalPages = (int)Math.Ceiling(total / (double)pageSize);
}

    <div class="d-flex justify-content-between align-items-center mt-3">
    <div>
        Showing page @currentPage of @totalPages â€” @total items
    </div>
    <nav>
        @functions{
            string BuildQuery(int page, int pageSizeParam)
            {
                var q = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(ViewContext.HttpContext.Request.QueryString.Value ?? "");
                var dict = q.ToDictionary(k => k.Key, v => v.Value.ToString());
                dict["page"] = page.ToString();
                dict["pageSize"] = pageSizeParam.ToString();
                return "?" + string.Join("&", dict.Select(kv => kv.Key + "=" + System.Net.WebUtility.UrlEncode(kv.Value)));
            }
        }

        <ul class="pagination mb-0">
            <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="@BuildQuery(1, pageSize)">First</a>
            </li>

            @{ var start = Math.Max(1, currentPage - 2); var end = Math.Min(totalPages, currentPage + 2); }
            @for (var i = start; i <= end; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@BuildQuery(i, pageSize)">@i</a>
                </li>
            }

            <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                <a class="page-link" href="@BuildQuery(totalPages, pageSize)">Last</a>
            </li>
        </ul>
    </nav>
</div>

<form method="get" class="row g-2 mb-3">
    <div class="col-auto">
    <input type="text" name="search" class="form-control" placeholder="Search by name or email" value="@ViewContext.HttpContext.Request.Query["search"]" />
    </div>
    <div class="col-auto">
        <select name="pageSize" class="form-select">
            <option value="10" @(pageSize == 10 ? "selected" : "")>10</option>
            <option value="25" @(pageSize == 25 ? "selected" : "")>25</option>
            <option value="50" @(pageSize == 50 ? "selected" : "")>50</option>
        </select>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-secondary">Filter</button>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="table-light">
            <tr>
                <th scope="col">UserId</th>
                <th scope="col">FirstName</th>
                <th scope="col">LastName</th>
                <th scope="col">EmailId</th>
                <th scope="col">LoginId</th>
                <th scope="col">DomainID</th>
                <th scope="col">CreatedOn</th>
                <th scope="col" class="text-center">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Users != null && Model.Users.Any())
            {
                var idx = 1;
                foreach (var user in Model.Users)
                {
                    <tr>
                        <th scope="row">@idx</th>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>@user.EmailId</td>
                        <td>@user.LoginId</td>
                        <td>@user.DomainID</td>
                        <td>@user.CreatedOn.ToString("yyyy-MM-dd")</td>
                        <td class="text-center">
                            <a asp-area="Admin" asp-controller="User" asp-action="Edit" asp-route-id="@user.UserId" class="btn btn-sm btn-outline-primary me-1" title="Edit">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <form asp-area="Admin" asp-controller="User" asp-action="Delete" asp-route-id="@user.UserId" method="post" class="d-inline">
                                <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete" onclick="return confirm('Are you sure you want to delete this user?');">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                    idx++;
                }
            }
            else
            {
                <tr>
                    <td colspan="8" class="text-center">No users found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>
